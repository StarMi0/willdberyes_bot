services:
  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["bash", "-c", "env && docker-entrypoint.sh postgres"]

  api:
    build:
      context: ./api_app
    container_name: wb_api
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      BEARER_TOKEN: ${BEARER_TOKEN}
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app_network

  bot:
    build:
      context: ./w_bot
    container_name: wb_bot
    environment:
      API_TOKEN: ${API_TOKEN}
      API_URL: ${API_URL}
      BEARER_TOKEN: ${BEARER_TOKEN}
    depends_on:
      - db
      - api
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
